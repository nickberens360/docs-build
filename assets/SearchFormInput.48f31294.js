import v from"./SearchFormInput.b84ad1fe.js";import{_ as k}from"./index.8a58b007.js";import{f as F,a as I,e as T,V as s,R as d,n as h,an as _,ao as w}from"./vuetify.65d833ec.js";import{S as y,e as r,f,g as n,k as t,J as o,E as a,I as m,x as V,z as u,s as g,aj as P,ak as E}from"./@vue.ee679632.js";import"./DatePicker.55087c86.js";import"./@vuepic.604267a2.js";import"./@babel.5574241f.js";import"./vuex.0eb68a2c.js";import"./date-fns.d38e1d55.js";import"./vue-atomic-docs.4f3653eb.js";import"./vue-router.ec64e966.js";import"./axios.eca6faa7.js";import"./axios-cache-interceptor.0956cad0.js";import"./cache-parser.124ebbb8.js";import"./fast-defer.b34f24de.js";import"./object-code.c2755e43.js";import"./@fortawesome.2cecc5e3.js";import"./@awesome.me.7dae7d79.js";import"./ResultsLimitMenu.e0b88f86.js";const x={components:{SearchFormInput:v},data:()=>({panel:["formData"],model:void 0,inputType:"VTextField",inputTypes:["VTextField","VSelect","VAutocomplete","VCheckbox","VSwitch"],inputs:{VTextField:{input:"VTextField",inputProps:{label:"Text Field",placeholder:"Enter text",prependIcon:"fal fa-search"}},VSelect:{input:"VSelect",inputProps:{label:"Select",items:["Option 1","Option 2","Option 3"],placeholder:"Select an option",prependIcon:"$boxDollar"}},VAutocomplete:{input:"VAutocomplete",inputProps:{label:"Autocomplete",multiple:!0,items:["Option 1","Option 2","Option 3"],placeholder:"Select an option"}},VCheckbox:{input:"VCheckbox",inputProps:{label:"Checkbox"}},VSwitch:{input:"VSwitch",inputProps:{label:"Switch"}}},cols:"6",propHeaders:[{title:"",value:"data-table-expand"},{title:"Name",key:"name"},{title:"Type",key:"type"},{title:"Required",key:"required"},{title:"Default",key:"default"},{title:"Validator",key:"validator"},{title:"Actions",key:"actions",width:"325px"}],propItems:[{name:"model-value",type:"[String, Object, Array, Boolean, Object]",required:!1,default:'" "',description:"Defines the data model of the input."},{name:"input-type",type:"String",required:!0,default:void 0,description:"Defines the type of input to render."},{name:"col-props",type:"Object",required:!1,default:' {cols: "auto"} ',description:"Uses Vuetify's col props to define the width of the input."}],eventHeaders:[{title:"Event",key:"event"},{title:"Type",key:"type"},{title:"Description",key:"description"}],eventItems:[{event:"update:model-value",type:"[String, Object, Array, Boolean]",description:"Emitted when the model value is updated. The payload contains the updated model value."}],slotHeaders:[{title:"Slot",key:"name"},{title:"Properties",key:"properties"},{title:"Description",key:"description"}],slotItems:[{name:"#default",properties:"none",description:"Default slot. Exposes the inputType and modelValue props."}]})},c=e=>(P("data-v-b7264a7e"),e=e(),E(),e),C={class:""},D={class:"data-panel"},$={class:"pa-4"},A={class:"d-block mb-1"},B={key:0},O=c(()=>a("p",{class:"mb-4"},[o(" This component dynamically renders various input types based on the "),a("code",null,"inputType"),o(" prop and binds their values to a model. It supports multiple Vuetify input components. The component is also wrapped in a "),a("code",null,"v-form"),o(" to allow for validation and submission. The "),a("code",null,"SearchFormInput"),o(" component is used in the "),a("code",null,"VCol"),o(" component to control it's width. ")],-1)),L=c(()=>a("p",null,[a("span",{class:"font-weight-bold"},"Note:"),o(" If using a "),a("code",null,"VRadioGroup"),o(" input type, use the "),a("code",null,"#default"),o(" slot to add the "),a("code",null,"VRadio"),o(" buttons. ")],-1)),R=["colspan"],N=c(()=>a("pre",null,`{
  input-type: inputType, // String,
  model-value: inputModel // Any,
}
          `,-1));function U(e,p,H,j,q,M){const S=y("SearchFormInput",!0),b=y("ExampleComponentUsage");return r(),f("div",C,[n(b,{"expand-props-table":!0},{description:t(()=>[O,L,n(F,{class:"mt-4 mb-1"}),n(I,null,{default:t(()=>[n(T,{class:"font-weight-bold"},{default:t(()=>[o(" Related Components ")]),_:1}),n(s,{to:"/atomic-docs/ExampleCoreSearchForm?relativePath=core/SearchForm.vue","prepend-icon":"$externalLink"},{default:t(()=>[o(" SearchForm ")]),_:1}),n(s,{to:"/atomic-docs/ExampleBaseSearchFormInput?relativePath=base/SearchFormInput.vue","prepend-icon":"$externalLink"},{default:t(()=>[o(" SearchFormInput ")]),_:1}),n(s,{to:"/atomic-docs/ExampleBaseSearchFormFieldset?relativePath=base/SearchFormFieldset.vue","prepend-icon":"$externalLink"},{default:t(()=>[o(" SearchFormFieldset ")]),_:1}),n(s,{to:"/atomic-docs/ExampleBaseSearchFormRow?relativePath=base/SearchFormRow.vue","prepend-icon":"$externalLink"},{default:t(()=>[o(" SearchFormRow ")]),_:1}),n(s,{to:"/atomic-docs/ExampleBaseSearchFormActions?relativePath=base/SearchFormActions.vue","prepend-icon":"$externalLink"},{default:t(()=>[o(" SearchFormActions ")]),_:1})]),_:1})]),props:t(()=>[n(d,{headers:e.propHeaders,items:e.propItems,"item-value":"name"},{"expanded-row":t(({columns:l,item:i})=>[a("tr",null,[a("td",{colspan:l.length,class:"py-4"},m(i.description),9,R)])]),["item.actions"]:t(({item:l})=>[l.name==="input-type"?(r(),V(h,{key:0,modelValue:e.inputType,"onUpdate:modelValue":[p[2]||(p[2]=i=>e.inputType=i),p[3]||(p[3]=i=>e.model=void 0)],label:"Input Type",items:e.inputTypes},null,8,["modelValue","items"])):u("",!0),l.name==="col-props"?(r(),V(h,{key:1,modelValue:e.cols,"onUpdate:modelValue":p[4]||(p[4]=i=>e.cols=i),label:"Col Props",items:["2","4","6","8","10","12"]},null,8,["modelValue"])):u("",!0)]),bottom:t(()=>[]),_:2},1032,["headers","items"])]),events:t(()=>[n(d,{headers:e.eventHeaders,items:e.eventItems},{bottom:t(()=>[]),_:1},8,["headers","items"])]),slots:t(()=>[n(d,{headers:e.slotHeaders,items:e.slotItems},{["item.properties"]:t(()=>[N]),bottom:t(()=>[]),_:2},1032,["headers","items"])]),default:t(()=>[n(S,g({modelValue:e.model,"onUpdate:modelValue":p[0]||(p[0]=l=>e.model=l),"input-type":e.inputType,label:"Kiosk Number","col-props":{cols:e.cols}},e.inputs[e.inputType].inputProps),null,16,["modelValue","input-type","col-props"]),a("div",D,[n(_,{modelValue:e.panel,"onUpdate:modelValue":p[1]||(p[1]=l=>e.panel=l)},{default:t(()=>[n(w,{value:"formData",title:"formData Model",color:"primary","bg-color":"grey-darken-4",elevation:"15"},{text:t(()=>[a("pre",$,[o(""),a("span",A,[o("model: "),e.model?(r(),f("code",B,m(e.model),1)):u("",!0)]),o(`
`+m(e.inputs[e.inputType])+`
      `,1)])]),_:1})]),_:1},8,["modelValue"])])]),_:1})])}const de=k(x,[["render",U],["__scopeId","data-v-b7264a7e"]]);export{de as default};
