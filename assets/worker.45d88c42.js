var C=(n,a,i)=>{if(!a.has(n))throw TypeError("Cannot "+i)};var e=(n,a,i)=>(C(n,a,"read from private field"),i?i.call(n):a.get(n)),s=(n,a,i)=>{if(a.has(n))throw TypeError("Cannot add the same private member more than once");a instanceof WeakSet?a.add(n):a.set(n,i)},r=(n,a,i,h)=>(C(n,a,"write to private field"),h?h.call(n,i):a.set(n,i),i);var o=(n,a,i)=>(C(n,a,"access private method"),i);(function(){var i,h,c,v,m,I,d,u,p,f,T,x,A,b,F,j,y,K,k,B,E,q,z,G,S,g,M,L,w,U;"use strict";onmessage=async function({data:l}){var t;try{l.type==="initialize"?n(l.data):l.type==="user-interaction"?self.sessionTimeoutService.recordInteraction(l.data):l.type==="end-session"&&((t=self.sessionTimeoutService)==null||t.endSession(),self.close())}catch(D){console.error(D),self.postMessage({type:"error"})}};async function n(l){if(self.sessionTimeoutService)return self.sessionTimeoutService;const t=new a(l);self.sessionTimeoutService=t,self.sessionTimeoutService.startSession()}class a{constructor({type:t="timer",idleThresholdMinutes:D=14,expireAfterIdleMinutes:H=1,keepAliveIntervalMinutes:J=5}){s(this,A);s(this,F);s(this,y);s(this,k);s(this,E);s(this,z);s(this,S);s(this,M);s(this,w);s(this,i,["timer","idle-detection-api"]);s(this,h,"timer");s(this,c,"pending");s(this,v,14);s(this,m,1);s(this,I,5);s(this,d,void 0);s(this,u,void 0);s(this,p,void 0);s(this,f,void 0);s(this,T,void 0);s(this,x,void 0);r(this,I,Math.max(1,parseFloat(J)||0)),r(this,v,Math.max(1,parseFloat(D)||1)),r(this,m,Math.max(0,parseFloat(H)||0)),r(this,h,e(this,i).includes(t)?t:e(this,i)[0])}get timeToExpiration(){return e(this,T)}set timeToExpiration(t){r(this,T,t),t<=0&&(this.sessionStatus="expired"),o(this,w,U).call(this)}get sessionStatus(){return e(this,c)}set sessionStatus(t){t!==e(this,c)&&(e(this,c)==="idle"&&t==="active"?(o(this,M,L).call(this),o(this,S,g).call(this)):t==="idle"?o(this,z,G).call(this):t==="active"&&o(this,k,B).call(this),r(this,c,t),o(this,w,U).call(this))}get sessionState(){return{sessionStatus:this.sessionStatus,timeToExpiration:this.timeToExpiration}}async startSession(){if(e(this,h)!=="timer")try{await o(this,A,b).call(this)}catch{r(this,h,"timer"),this.startSession()}else o(this,F,j).call(this)}endSession(){o(this,E,q).call(this),o(this,y,K).call(this),o(this,S,g).call(this)}recordInteraction(t){r(this,x,t||Date.now()),this.sessionStatus="active"}postMessage(t,D={}){self.postMessage({type:t,data:D})}}i=new WeakMap,h=new WeakMap,c=new WeakMap,v=new WeakMap,m=new WeakMap,I=new WeakMap,d=new WeakMap,u=new WeakMap,p=new WeakMap,f=new WeakMap,T=new WeakMap,x=new WeakMap,A=new WeakSet,b=async function(){r(this,d,new self.IdleDetector),e(this,d).addEventListener("change",()=>{this.sessionStatus=e(this,d).userState}),await e(this,d).start({threshold:e(this,v)*6e4})},F=new WeakSet,j=function(){this.recordInteraction(),o(this,y,K).call(this),r(this,u,setInterval(()=>{if(this.sessionStatus==="active"){const t=e(this,x)+e(this,v)*6e4;Date.now()>=t&&(this.sessionStatus="idle")}},250))},y=new WeakSet,K=function(){e(this,u)&&(clearInterval(e(this,u)),r(this,u,void 0))},k=new WeakSet,B=function(){o(this,E,q).call(this);const t=e(this,I)*6e4;r(this,p,setInterval(()=>{["active","idle"].includes(this.sessionStatus)&&o(this,M,L).call(this)},t))},E=new WeakSet,q=function(){e(this,p)&&(clearInterval(e(this,p)),r(this,p,void 0))},z=new WeakSet,G=function(){o(this,S,g).call(this);const t=Date.now()+e(this,m)*6e4;r(this,f,setInterval(()=>{this.sessionStatus==="idle"?this.timeToExpiration=t-Date.now():o(this,S,g).call(this)},250))},S=new WeakSet,g=function(){e(this,f)&&(clearInterval(e(this,f)),r(this,f,void 0)),this.timeToExpiration=void 0},M=new WeakSet,L=function(){this.postMessage("extend-session")},w=new WeakSet,U=function(){this.postMessage("state-update",this.sessionState)}})();
