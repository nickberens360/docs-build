import{m as P,a as T}from"./vuex-D3TwipD2.js";import{_ as D,t as A}from"./index-LK9MQE2L.js";import I from"./LocationPin-BhJ_sqEs.js";import K from"./RoutePlannerToolbar-DYXB_z_1.js";import _ from"./RoutePlannerLegend-C2RHa7Am.js";import E from"./KioskInfoWindow-Ct4TLS3G.js";import x from"./DefaultLayout-DdfUBm6-.js";import{$ as N,R as z,j as V,x as B,O as $}from"./vue3-google-map-DtpxebVH.js";import{C as h,i as n,e as r,s as g,x as j,_ as c,b as F,g as G,F as Z,B as J,p as U,J as y,A as d,E as Y}from"./@vue-DNrUJgob.js";import{b as q,W as Q,ay as X,l as O,m as R,t as b,a1 as ee}from"./vuetify-BgnNF2O3.js";import"./date-fns-2ylUqVpG.js";import"./@babel-BTTPuEuv.js";import"./vue-component-docs-plugin-BnqcuvvC.js";import"./vue-router-BVOKdCCq.js";import"./axios-xsH4HHeE.js";import"./axios-cache-interceptor-DgAMPFM2.js";import"./cache-parser-DXYp_BCq.js";import"./fast-defer-9MI9za_P.js";import"./object-code-SBtdq8jY.js";import"./@fortawesome-BWcQmPY7.js";import"./@awesome.me-Btqfd-fw.js";import"./MeruDataTable-jf3gvfqw.js";const te={components:{GoogleMap:$,MapMarker:B,CustomMarker:V,MarkerCluster:z,InfoWindow:N,LocationPin:I,RoutePlannerToolbar:K,RoutePlannerLegend:_,KioskInfoWindow:E,DefaultLayout:x},data:()=>({selectedLocations:[],isToolbarExpanded:!1,kiosksWithHealth:null,userHasAssignedKiosks:!0,userPositionMarker:null,mapCenter:{lat:39.8283,lng:-98.5795},mapZoom:4,isMapReady:!1,activeLocation:void 0,isMounted:!1}),computed:{...T("kiosk",["userKiosks"]),...P("app",["getEnvConfigs"]),googleMapsAPI(){return this.getEnvConfigs.googleMapsAPI},isLoading(){return this.kiosksWithHealth===null},isAllSelected:{get(){return this.selectedLocations.length===this.locationsWithKioskHealth.length},set(e){this.closeInfoWindow(),this.selectedLocations=e?this.locationsWithKioskHealth.map(({id:t})=>t):[]}},mapOptions(){return{apiKey:this.googleMapsAPI.key,center:this.mapCenter,zoom:this.mapZoom,mapId:this.googleMapsAPI.mapId}},clusterOptions(){return{renderer:{render:this.clusterRenderer},algorithmOptions:{maxZoom:16,radius:150},markers:this.locationMarkers}},infoWindowOptions(){let e=null;return this.activeLocation&&(e={pixelOffset:{width:0,height:-50},position:{lat:this.activeLocation.latitude,lng:this.activeLocation.longitude},maxWidth:300}),e},locationMarkers(){return this.locationsWithKioskHealth.map(e=>({position:{lat:e.latitude,lng:e.longitude},anchorPoint:"BOTTOM_CENTER",location:e,hasProblems:e.hasProblems}))},locationsWithKioskHealth(){return(this.kiosksWithHealth||[]).reduce((e,t)=>{const o=e.find(({id:i})=>i===t.site.location.id);return o?o.kiosks.push(t):e.push({...t.site.location,kiosks:[t]}),e},[]).map(e=>{let t=e.kiosks.sort((s,u)=>u.serviceStatus.value-s.serviceStatus.value)[0].serviceStatus,o=e.kiosks.sort((s,u)=>u.healthStatus.value-s.healthStatus.value)[0].healthStatus,i=e.kiosks.sort((s,u)=>u.revenueStatus.value-s.revenueStatus.value)[0].revenueStatus,l=i.value===this.RevenueStatus.HighRevenue.value;return{...e,worstServiceStatus:t,worstHealthStatus:o,bestRevenueStatus:i,isHighRevenue:l,hasProblems:t.value!==this.ServiceStatus.RecentlyServiced.value||o.value!==this.HealthStatus.Healthy.value}})}},watch:{isMapReady(e){e&&this.addUserPositionMarker()}},mounted(){this.isMounted=!0,this.StatusColors={Ok:"rgb(var(--v-theme-success))",Warning:"rgb(var(--v-theme-warning))",Error:"rgb(var(--v-theme-error))",Disconnected:"rgb(var(--v-theme-meru-neutral))",DarkGrey:"rgb(var(--v-theme-meru-neutral-darken-4))"},this.HealthStatus={Healthy:{value:0,title:"Healthy",color:this.StatusColors.Ok},OpenRedmineTicket:{value:1,title:"Open Tickets",color:this.StatusColors.Warning},OutOfOrder:{value:2,title:"Out of Order",color:this.StatusColors.Error},Disconnected:{value:3,title:"Disconnected",color:this.StatusColors.Disconnected}},this.RevenueStatus={LowRevenue:{value:0,title:"Low Revenue",color:this.StatusColors.Disconnected},HighRevenue:{value:1,title:"High Revenue",color:"#fcc203"}},this.ConnectionStatus={Connected:{value:!0,title:"Connected",color:this.StatusColors.Ok},Disconnected:{value:!1,title:"Disconnected",color:this.StatusColors.Disconnected}},this.ServiceStatus={RecentlyServiced:{value:0,title:"Recently Serviced",color:this.StatusColors.Ok},ServiceSoon:{value:1,title:"Service Soon",color:this.StatusColors.Warning},NeedsService:{value:2,title:"Overdue Service",color:this.StatusColors.Error}},A.getOpenTickets().then(({data:e})=>{this.userHasAssignedKiosks=e.length!==0,this.appendKioskHealthData(e)}).catch(()=>console.error("Failed to load Redmine tickets"))},methods:{panToMarker(e){var l;this.$vuetify.display.smAndDown&&(this.isToolbarExpanded=!1);const t=this.locationsWithKioskHealth.find(({id:s})=>s===e),{latitude:o,longitude:i}=t;this.$vuetify.display.smAndDown?this.$refs.map.map.panTo({lat:o+.005,lng:i}):this.$refs.map.map.panTo({lat:o+.002,lng:i+.004}),(l=this.$refs.map.map)==null||l.setZoom(16),this.openInfoWindow(t)},closeInfoWindow(){this.activeLocation&&(this.activeLocation=void 0),this.$nextTick(()=>{var e;(e=this.$refs.infoWindow)==null||e.close()})},openInfoWindow(e){var t;((t=this.activeLocation)==null?void 0:t.id)!==e.id&&(this.activeLocation=e)},toggleLocationSelected(e,t=!0,o=!0){var l;t&&this.closeInfoWindow(),this.selectedLocations.includes(e)?this.selectedLocations=this.selectedLocations.filter(s=>s!==e):(this.selectedLocations.push(e),this.isToolbarExpanded&&o&&((l=this.$refs.toolbar)==null||l.scrollToLocation(e)))},addUserPositionMarker(){navigator.geolocation&&navigator.geolocation.getCurrentPosition(({coords:e})=>{var t,o,i;this.userPositionMarker={position:{lat:e.latitude,lng:e.longitude},icon:{path:(i=(o=(t=window.google)==null?void 0:t.maps)==null?void 0:o.SymbolPath)==null?void 0:i.CIRCLE,scale:8,fillColor:"#4486F6",fillOpacity:1,strokeColor:"white",strokeWeight:3}}})},appendKioskHealthData(e){const t=JSON.parse(JSON.stringify(this.userKiosks)).filter(o=>o.site.location.latitude&&o.site.location.longitude);t.forEach(o=>{const i=new Date(Date.now()-6e5);o.connectionStatus=o.lastConnectTime&&new Date(o.lastConnectTime)>i?this.ConnectionStatus.Connected:this.ConnectionStatus.Disconnected,o.daysSinceLastService<31?o.serviceStatus=this.ServiceStatus.RecentlyServiced:o.daysSinceLastService<60?o.serviceStatus=this.ServiceStatus.ServiceSoon:o.serviceStatus=this.ServiceStatus.NeedsService,o.revenueStatus=o.avgDailyRevenue>40?this.RevenueStatus.HighRevenue:this.RevenueStatus.LowRevenue,o.openTicketCount=(e.find(l=>l.serialNumber===o.serialNumber)||{}).openTickets||0,o.connectionStatus===this.ConnectionStatus.Disconnected?o.healthStatus=this.HealthStatus.Disconnected:o.outOfOrderTime?o.healthStatus=this.HealthStatus.OutOfOrder:o.openTicketCount>0?o.healthStatus=this.HealthStatus.OpenRedmineTicket:o.healthStatus=this.HealthStatus.Healthy}),this.kiosksWithHealth=t},clusterRenderer(e,t){const{count:o,position:i}=e,l=(t.clusters.markers.mean-t.clusters.markers.min)/2,s=o<t.clusters.markers.mean-l,u=!s&&o<t.clusters.markers.mean+l;let p=50;s?p=30:u&&(p=40);const v=e.markers.some(m=>{var f;return(f=m==null?void 0:m.opts)==null?void 0:f.hasProblems}),S=v?"#f44336":"#4CAF50",k=v?"95":"105",w=window.btoa(`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 240 240" width="50" height="50">
        <circle cx="120" cy="120" r="120" style="fill: ${S}" />
        <circle cx="120" cy="120" r="${k}" style="fill:#fff" />
        </svg>`),C={position:i,title:"Multiple Locations Here",icon:{url:`data:image/svg+xml;base64,${w}`,anchor:new window.google.maps.Point(25,25),scaledSize:new window.google.maps.Size(p,p)},label:{text:String(o),color:"#000",fontSize:"12px",fontWeight:"600"}};return new window.google.maps.Marker(C)}}};function oe(e,t,o,i,l,s){const u=c("RoutePlannerToolbar"),p=c("MapMarker"),v=c("LocationPin"),S=c("CustomMarker"),k=c("MarkerCluster"),w=c("KioskInfoWindow"),C=c("InfoWindow"),m=c("GoogleMap"),f=c("RoutePlannerLegend"),H=c("DefaultLayout");return d(),h(H,{"no-content-padding":"",class:"service-route-planner"},{default:n(()=>[r(u,{ref:"toolbar","is-expanded":e.isToolbarExpanded,"onUpdate:isExpanded":t[0]||(t[0]=a=>e.isToolbarExpanded=a),locations:s.locationsWithKioskHealth,"selected-location-ids":e.selectedLocations,class:j(["toolbar",[e.$vuetify.display.smAndDown?"mobile-toolbar":"desktop-toolbar"]]),onToggleSelectAll:t[1]||(t[1]=a=>s.isAllSelected=!s.isAllSelected),onToggleLocationSelect:t[2]||(t[2]=a=>s.toggleLocationSelected(a,!0,!1)),onShowLocation:s.panToMarker},null,8,["is-expanded","locations","selected-location-ids","class","onShowLocation"]),r(m,{ref:"map","api-key":s.mapOptions.apiKey,center:s.mapOptions.center,zoom:s.mapOptions.zoom,"map-id":s.mapOptions.mapId,"disable-default-ui":"","clickable-icons":!1,class:"google-map",onIdle:t[4]||(t[4]=a=>e.isMapReady=!0),onClick:s.closeInfoWindow},{default:n(()=>[e.userPositionMarker?(d(),h(p,{key:0,options:e.userPositionMarker},null,8,["options"])):g("",!0),r(k,{options:s.clusterOptions},{default:n(()=>[(d(!0),F(Z,null,G(s.locationMarkers,(a,W)=>(d(),h(S,{key:W,options:a,onClick:Y(L=>s.openInfoWindow(a.location),["stop"])},{default:n(()=>{var L,M;return[r(v,{"service-status-color":(L=a.location.worstServiceStatus)==null?void 0:L.color,"health-status-color":(M=a.location.worstHealthStatus)==null?void 0:M.color,"is-high-revenue":a.location.isHighRevenue,"is-selected":e.selectedLocations.includes(a.location.id)},null,8,["service-status-color","health-status-color","is-high-revenue","is-selected"])]}),_:2},1032,["options","onClick"]))),128))]),_:1},8,["options"]),r(C,{ref:"infoWindow",options:s.infoWindowOptions},{default:n(()=>[J("div",null,[e.activeLocation?(d(),h(w,{key:e.activeLocation.id,kiosks:e.activeLocation.kiosks,"is-included-in-route":e.selectedLocations.includes(e.activeLocation.id),onToggleSelection:t[3]||(t[3]=a=>s.toggleLocationSelected(e.activeLocation.id))},null,8,["kiosks","is-included-in-route"])):g("",!0)])]),_:1},8,["options"])]),_:1},8,["api-key","center","zoom","map-id","onClick"]),r(Q,{transition:"slide-y-transition"},{activator:n(({props:a})=>[r(q,U({class:"route-planner-legend",color:"info",icon:"$mapMarkerAlt"},a),null,16)]),default:n(()=>[r(f)]),_:1}),e.isMounted?(d(),h(X,{key:0,"model-value":s.isLoading||!e.userHasAssignedKiosks,disabled:"",persistent:"",attach:".service-route-planner","content-class":"h-100 w-100 d-flex justify-center align-center"},{default:n(()=>[e.userHasAssignedKiosks?s.isLoading?(d(),h(O,{key:1,theme:"light"},{default:n(()=>[r(R,{class:"justify-center"},{default:n(()=>t[7]||(t[7]=[y(" Loading Kiosks ")])),_:1,__:[7]}),r(b,null,{default:n(()=>[r(ee)]),_:1})]),_:1})):g("",!0):(d(),h(O,{key:0,theme:"light"},{default:n(()=>[r(R,{class:"justify-center"},{default:n(()=>t[5]||(t[5]=[y(" No Assigned Kiosks ")])),_:1,__:[5]}),r(b,{class:"text-center"},{default:n(()=>t[6]||(t[6]=[y(" Your account has no assigned kiosks ")])),_:1,__:[6]})]),_:1}))]),_:1},8,["model-value"])):g("",!0)]),_:1})}const Oe=D(te,[["render",oe],["__scopeId","data-v-12e80f69"]]);export{Oe as default};
