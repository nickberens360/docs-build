import P from"./ConfirmDialog-CBrcJpBr.js";import b from"./PrintTeleporter-DntoVZrr.js";import S from"./PickLabel-K6JGHWo-.js";import{c as C,a as T}from"./vuex-BwOdvJvI.js";import{_ as y}from"./index-AG15HfzG.js";import{ah as k}from"./vuetify-BymGJ7fC.js";import{b as m,e as a,i as p,_ as l,f as _,A as c,s as I,F as x,g as B,C as w,J as $,H as O,B as A}from"./@vue-mGKKYCuj.js";import"./date-fns-Cq_iz7V_.js";import"./@babel-BTTPuEuv.js";import"./vue-component-docs-plugin-CX_tIU2Y.js";import"./vue-router-CgUA7A7W.js";import"./axios-xsH4HHeE.js";import"./axios-cache-interceptor-DgAMPFM2.js";import"./cache-parser-DXYp_BCq.js";import"./fast-defer-9MI9za_P.js";import"./object-code-SBtdq8jY.js";import"./@fortawesome-C0fAH5tI.js";import"./@awesome.me-Btqfd-fw.js";import"./BarcodeGenerator-DfKke3pi.js";import"./bwip-js-DL1APdek.js";const L={components:{PrintTeleporter:b,PickLabel:S,ConfirmDialog:P},props:{orders:{type:[Array,Object],required:!0},isReprintable:{type:Boolean,default:!1}},emits:["print-process-complete","print-canceled"],data(){return{confirmAction:"print"}},computed:{...T("orders",["skipInitialPrintConfirmation"]),printBtnLabel(){const t=this.ordersToPrint.length>1?this.ordersToPrint.length:" ";return this.isReprintable&&!this.isPendingPrintStage?`RePrint ${t} ${this.formattedStrings.label}`:`Print ${t} ${this.formattedStrings.label}`},ordersToPrint(){return Array.isArray(this.orders)?this.orders:[this.orders]},isPendingPrintStage(){var t;return((t=this.ordersToPrint[0])==null?void 0:t.stage)==="pending-print"},formattedStrings(){const t=this.ordersToPrint.length>1;return{label:t?"labels":"label",has:t?"have":"has"}},toggleSkipInitialPrintConfirmation:{get(){return this.skipInitialPrintConfirmation},set(t){this.setSkipInitialPrintConfirmation(t)}}},methods:{...C("orders",["setSkipInitialPrintConfirmation"]),async showPrintConfirmationDialog(){const t={rePrintableInitial:{title:"Label Already Printed",message:"This label has already been printed. Are you sure you want to reprint?",supportingMessage:this.skipInitialPrintConfirmation?void 0:"NOTE: You must confirm the label has printed after printing to transition to the next stage.",confirmBtnText:"Yes, Reprint",cancelBtnText:"Cancel"},defaultInitial:{title:"ATTENTION",message:`You must confirm the ${this.formattedStrings.label} ${this.formattedStrings.has} printed after printing to transition to the next stage.`,confirmBtnText:"I Understand, Print",cancelBtnText:"Cancel"},final:{title:`Confirm the ${this.formattedStrings.label} Printed`,message:`Did the ${this.formattedStrings.label} print successfully?`,confirmBtnText:"Yes, submit",cancelBtnText:"No, cancel"}};let e;this.confirmAction==="print"?this.isPendingPrintStage?e=t.defaultInitial:e=t.rePrintableInitial:e=t.final;const n={confirmBtnText:e.confirmBtnText,cancelBtnText:e.cancelBtnText,supportingMessage:e.supportingMessage,width:400,color:"error",titleIcon:"$exclamationTriangle",zIndex:2410};return await this.$refs.confirm.open(e.title,e.message,n)},async handlePrintBtnClick(){this.confirmAction="print",this.isPendingPrintStage&&this.skipInitialPrintConfirmation||await this.showPrintConfirmationDialog()?this.printLabels():this.$emit("print-canceled")},async submitPrintedLabels(){const t=await this.postOrderPrinted(this.ordersToPrint),e=this.getSubmissionResultType(t);return this.showSubmissionResultsSnackbar(t,e),{failedOrders:t.failed,result:e}},async postOrderPrinted(t){const e=async r=>{var i;const s=r.sessionId||((i=r.session)==null?void 0:i.sessionId);try{return await this.$store.dispatch("order/postOrderPrinted",s),r}catch(o){throw{order:r,error:o}}};return(await Promise.allSettled(t.map(e))).reduce((r,s)=>(s.status==="rejected"?r.failed.push({order:s.reason.order,error:s.reason.error.message}):r.successful.push(s.value),r),{successful:[],failed:[]})},getSubmissionResultType(t){const{successful:e,failed:n}=t;return e.length>0&&n.length===0?"successful":e.length===0&&n.length>0?"failed":e.length>0&&n.length>0?"partial":"noOrders"},showSubmissionResultsSnackbar(t,e){const{successful:n,failed:r}=t,s=n.length>1?"orders":"order",i=r.length>1?"orders":"order",o={successful:{message:`Successfully submitted ${n.length} ${s} as printed`},failed:{color:"error",message:`Failed to submit ${r.length} ${i} as printed.`},partial:{color:"warning",message:`Successfully submitted ${n.length} ${s} as printed, but failed to submit ${r.length} ${i}`},noOrders:{color:"info",message:"No data submitted"}};this.$store.dispatch("app/setSnackbar",{...o[e]})},printLabels(){this.$refs.printTeleporter.print()},async handlePrintComplete(){if(this.confirmAction="submit",await this.showPrintConfirmationDialog()){const e=await this.submitPrintedLabels();this.$emit("print-process-complete",e)}}}},V={class:"print-pick-label"},D={key:0},N={class:"d-flex justify-end px-4"};function R(t,e,n,r,s,i){const o=l("PickLabel"),u=l("PrintTeleporter"),h=l("VBtnSecondary"),g=l("ConfirmDialog");return c(),m("div",V,[a(u,{ref:"printTeleporter",onPrintingComplete:i.handlePrintComplete},{default:p(({isPrinting:d})=>[d?(c(),m("div",D,[(c(!0),m(x,null,B(i.ordersToPrint,f=>(c(),w(o,{key:f.transactionId,order:f},null,8,["order"]))),128))])):I("",!0)]),_:1},8,["onPrintingComplete"]),a(h,{disabled:i.ordersToPrint.length===0,"prepend-icon":"$print",onClick:i.handlePrintBtnClick},{default:p(()=>[$(O(i.printBtnLabel),1)]),_:1},8,["disabled","onClick"]),a(g,{ref:"confirm",persistent:"",class:"d-print-none"},_({_:2},[s.confirmAction==="print"&&i.isPendingPrintStage?{name:"below-actions",fn:p(()=>[A("div",N,[a(k,{modelValue:i.toggleSkipInitialPrintConfirmation,"onUpdate:modelValue":e[0]||(e[0]=d=>i.toggleSkipInitialPrintConfirmation=d),label:"Do not show again","hide-details":""},null,8,["modelValue"])])]),key:"0"}:void 0]),1536)])}const rt=y(L,[["render",R]]);export{rt as default};
