import d from"./ExceptionForm.8881358b.js";import{_ as c}from"./index.8a58b007.js";import{R as n}from"./vuetify.65d833ec.js";import{S as r,e as u,f as b,g as s,k as t,J as f,E as m,I as h}from"./@vue.ee679632.js";import"./vuex.0eb68a2c.js";import"./date-fns.d38e1d55.js";import"./vue-atomic-docs.4f3653eb.js";import"./vue-router.ec64e966.js";import"./axios.eca6faa7.js";import"./axios-cache-interceptor.0956cad0.js";import"./cache-parser.124ebbb8.js";import"./fast-defer.b34f24de.js";import"./object-code.c2755e43.js";import"./@fortawesome.2cecc5e3.js";import"./@awesome.me.7dae7d79.js";const y={components:{ExceptionForm:d},data:()=>({isLoading:!1,submittedData:{},propsHeaders:[{title:"Name",key:"name"},{title:"Type",key:"type"},{title:"Required",key:"required"},{title:"Default",key:"default"}],propsItems:[{name:"loading",type:"Boolean",required:"false",default:"false"}],eventsHeaders:[{title:"Name",key:"name"},{title:"Payload",key:"payload"},{title:"Description",key:"description"}],eventsItems:[{name:"submit",payload:"Object",description:"Emitted when the submit button is clicked, payload is the form data for the exception to be submitted. Form data is not automatically reset, the `resetForm` method is exposed and can be used as needed if submission is successful."},{name:"cancel",payload:"none",description:"Emitted when the cancel button is clicked, the form will be reset automatically."}]}),methods:{showSubmission(e){this.isLoading=!0,setTimeout(()=>{this.submittedData=e,this.isLoading=!1},2e3)},showCancelled(){this.$store.dispatch("app/setSnackbar",{message:"Exception cancelled, form reset",color:"warning"})}}},g={class:"my-3"};function k(e,o,v,E,w,a){const l=r("ExceptionForm",!0),p=r("ExampleComponentUsage");return u(),b("div",null,[s(p,{"expand-props-table":""},{description:t(()=>[f(" This component is used to display a simple key-value pair, a small label above a larger value. The label will not be rendered if not supplied. ")]),props:t(()=>[s(n,{headers:e.propsHeaders,items:e.propsItems},{bottom:t(()=>[]),_:1},8,["headers","items"])]),events:t(()=>[s(n,{headers:e.eventsHeaders,items:e.eventsItems},{bottom:t(()=>[]),_:1},8,["headers","items"])]),default:t(()=>[s(l,{loading:e.isLoading,onCancel:o[0]||(o[0]=i=>a.showCancelled()),onSubmit:o[1]||(o[1]=i=>a.showSubmission(i))},null,8,["loading"]),m("div",g,[m("pre",null,h(e.submittedData),1)])]),_:1})])}const R=c(y,[["render",k]]);export{R as default};
