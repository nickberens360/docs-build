import{m as W,a as T}from"./vuex.0eb68a2c.js";import{_,t as D}from"./index.8a58b007.js";import I from"./LocationPin.708f9a8d.js";import A from"./RoutePlannerToolbar.02df046e.js";import K from"./RoutePlannerLegend.55b86802.js";import E from"./KioskInfoWindow.10076e55.js";import x from"./DefaultLayout.61d229e4.js";import{O as z,x as N,j as V,R as B,$ as G}from"./vue3-google-map.cc9937d2.js";import{S as c,e as d,x as h,k as n,g as r,B as j,z as g,f as $,j as F,G as Z,E as J,s as U,J as y,F as Y}from"./@vue.ee679632.js";import{d as q,W as Q,ay as X,q as M,k as R,t as b,a1 as ee}from"./vuetify.65d833ec.js";import"./date-fns.d38e1d55.js";import"./vue-atomic-docs.4f3653eb.js";import"./vue-router.ec64e966.js";import"./axios.eca6faa7.js";import"./axios-cache-interceptor.0956cad0.js";import"./cache-parser.124ebbb8.js";import"./fast-defer.b34f24de.js";import"./object-code.c2755e43.js";import"./@fortawesome.2cecc5e3.js";import"./@awesome.me.7dae7d79.js";import"./MeruDataTable.80a372ee.js";const te={components:{GoogleMap:z,MapMarker:N,CustomMarker:V,MarkerCluster:B,InfoWindow:G,LocationPin:I,RoutePlannerToolbar:A,RoutePlannerLegend:K,KioskInfoWindow:E,DefaultLayout:x},data:()=>({selectedLocations:[],isToolbarExpanded:!1,kiosksWithHealth:null,userHasAssignedKiosks:!0,userPositionMarker:null,mapCenter:{lat:39.8283,lng:-98.5795},mapZoom:4,isMapReady:!1,activeLocation:void 0,isMounted:!1}),computed:{...W("kiosk",["userKiosks"]),...T("app",["getEnvConfigs"]),googleMapsAPI(){return this.getEnvConfigs.googleMapsAPI},isLoading(){return this.kiosksWithHealth===null},isAllSelected:{get(){return this.selectedLocations.length===this.locationsWithKioskHealth.length},set(e){this.closeInfoWindow(),this.selectedLocations=e?this.locationsWithKioskHealth.map(({id:o})=>o):[]}},mapOptions(){return{apiKey:{}.VITE_GOOGLE_MAPS_API_KEY||this.googleMapsAPI.key,center:this.mapCenter,zoom:this.mapZoom,mapId:this.googleMapsAPI.mapId}},clusterOptions(){return{renderer:{render:this.clusterRenderer},algorithmOptions:{maxZoom:16,radius:150},markers:this.locationMarkers}},infoWindowOptions(){let e=null;return this.activeLocation&&(e={pixelOffset:{width:0,height:-50},position:{lat:this.activeLocation.latitude,lng:this.activeLocation.longitude},maxWidth:300}),e},locationMarkers(){return this.locationsWithKioskHealth.map(e=>({position:{lat:e.latitude,lng:e.longitude},anchorPoint:"BOTTOM_CENTER",location:e,hasProblems:e.hasProblems}))},locationsWithKioskHealth(){return(this.kiosksWithHealth||[]).reduce((e,o)=>{const t=e.find(({id:i})=>i===o.site.location.id);return t?t.kiosks.push(o):e.push({...o.site.location,kiosks:[o]}),e},[]).map(e=>{let o=e.kiosks.sort((s,u)=>u.serviceStatus.value-s.serviceStatus.value)[0].serviceStatus,t=e.kiosks.sort((s,u)=>u.healthStatus.value-s.healthStatus.value)[0].healthStatus,i=e.kiosks.sort((s,u)=>u.revenueStatus.value-s.revenueStatus.value)[0].revenueStatus,l=i.value===this.RevenueStatus.HighRevenue.value;return{...e,worstServiceStatus:o,worstHealthStatus:t,bestRevenueStatus:i,isHighRevenue:l,hasProblems:o.value!==this.ServiceStatus.RecentlyServiced.value||t.value!==this.HealthStatus.Healthy.value}})}},watch:{isMapReady(e){e&&this.addUserPositionMarker()}},mounted(){this.isMounted=!0,this.StatusColors={Ok:"rgb(var(--v-theme-success))",Warning:"rgb(var(--v-theme-warning))",Error:"rgb(var(--v-theme-error))",Disconnected:"rgb(var(--v-theme-meru-neutral))",DarkGrey:"rgb(var(--v-theme-meru-neutral-darken-4))"},this.HealthStatus={Healthy:{value:0,title:"Healthy",color:this.StatusColors.Ok},OpenRedmineTicket:{value:1,title:"Open Tickets",color:this.StatusColors.Warning},OutOfOrder:{value:2,title:"Out of Order",color:this.StatusColors.Error},Disconnected:{value:3,title:"Disconnected",color:this.StatusColors.Disconnected}},this.RevenueStatus={LowRevenue:{value:0,title:"Low Revenue",color:this.StatusColors.Disconnected},HighRevenue:{value:1,title:"High Revenue",color:"#fcc203"}},this.ConnectionStatus={Connected:{value:!0,title:"Connected",color:this.StatusColors.Ok},Disconnected:{value:!1,title:"Disconnected",color:this.StatusColors.Disconnected}},this.ServiceStatus={RecentlyServiced:{value:0,title:"Recently Serviced",color:this.StatusColors.Ok},ServiceSoon:{value:1,title:"Service Soon",color:this.StatusColors.Warning},NeedsService:{value:2,title:"Overdue Service",color:this.StatusColors.Error}},D.getOpenTickets().then(({data:e})=>{this.userHasAssignedKiosks=e.length!==0,this.appendKioskHealthData(e)}).catch(()=>console.error("Failed to load Redmine tickets"))},methods:{panToMarker(e){var l;this.$vuetify.display.smAndDown&&(this.isToolbarExpanded=!1);const o=this.locationsWithKioskHealth.find(({id:s})=>s===e),{latitude:t,longitude:i}=o;this.$vuetify.display.smAndDown?this.$refs.map.map.panTo({lat:t+.005,lng:i}):this.$refs.map.map.panTo({lat:t+.002,lng:i+.004}),(l=this.$refs.map.map)==null||l.setZoom(16),this.openInfoWindow(o)},closeInfoWindow(){this.activeLocation&&(this.activeLocation=void 0),this.$nextTick(()=>{var e;(e=this.$refs.infoWindow)==null||e.close()})},openInfoWindow(e){var o;((o=this.activeLocation)==null?void 0:o.id)!==e.id&&(this.activeLocation=e)},toggleLocationSelected(e,o=!0,t=!0){var l;o&&this.closeInfoWindow(),this.selectedLocations.includes(e)?this.selectedLocations=this.selectedLocations.filter(s=>s!==e):(this.selectedLocations.push(e),this.isToolbarExpanded&&t&&((l=this.$refs.toolbar)==null||l.scrollToLocation(e)))},addUserPositionMarker(){navigator.geolocation&&navigator.geolocation.getCurrentPosition(({coords:e})=>{var o,t,i;this.userPositionMarker={position:{lat:e.latitude,lng:e.longitude},icon:{path:(i=(t=(o=window.google)==null?void 0:o.maps)==null?void 0:t.SymbolPath)==null?void 0:i.CIRCLE,scale:8,fillColor:"#4486F6",fillOpacity:1,strokeColor:"white",strokeWeight:3}}})},appendKioskHealthData(e){const o=JSON.parse(JSON.stringify(this.userKiosks)).filter(t=>t.site.location.latitude&&t.site.location.longitude);o.forEach(t=>{const i=new Date(Date.now()-6e5);t.connectionStatus=t.lastConnectTime&&new Date(t.lastConnectTime)>i?this.ConnectionStatus.Connected:this.ConnectionStatus.Disconnected,t.daysSinceLastService<31?t.serviceStatus=this.ServiceStatus.RecentlyServiced:t.daysSinceLastService<60?t.serviceStatus=this.ServiceStatus.ServiceSoon:t.serviceStatus=this.ServiceStatus.NeedsService,t.revenueStatus=t.avgDailyRevenue>40?this.RevenueStatus.HighRevenue:this.RevenueStatus.LowRevenue,t.openTicketCount=(e.find(l=>l.serialNumber===t.serialNumber)||{}).openTickets||0,t.connectionStatus===this.ConnectionStatus.Disconnected?t.healthStatus=this.HealthStatus.Disconnected:t.outOfOrderTime?t.healthStatus=this.HealthStatus.OutOfOrder:t.openTicketCount>0?t.healthStatus=this.HealthStatus.OpenRedmineTicket:t.healthStatus=this.HealthStatus.Healthy}),this.kiosksWithHealth=o},clusterRenderer(e,o){const{count:t,position:i}=e,l=(o.clusters.markers.mean-o.clusters.markers.min)/2,s=t<o.clusters.markers.mean-l,u=!s&&t<o.clusters.markers.mean+l;let p=50;s?p=30:u&&(p=40);const v=e.markers.some(m=>{var f;return(f=m==null?void 0:m.opts)==null?void 0:f.hasProblems}),S=v?"#f44336":"#4CAF50",k=v?"95":"105",w=window.btoa(`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 240 240" width="50" height="50">
        <circle cx="120" cy="120" r="120" style="fill: ${S}" />
        <circle cx="120" cy="120" r="${k}" style="fill:#fff" />
        </svg>`),C={position:i,title:"Multiple Locations Here",icon:{url:`data:image/svg+xml;base64,${w}`,anchor:new window.google.maps.Point(25,25),scaledSize:new window.google.maps.Size(p,p)},label:{text:String(t),color:"#000",fontSize:"12px",fontWeight:"600"}};return new window.google.maps.Marker(C)}}};function oe(e,o,t,i,l,s){const u=c("RoutePlannerToolbar"),p=c("MapMarker"),v=c("LocationPin"),S=c("CustomMarker"),k=c("MarkerCluster"),w=c("KioskInfoWindow"),C=c("InfoWindow"),m=c("GoogleMap"),f=c("RoutePlannerLegend"),H=c("DefaultLayout");return d(),h(H,{"no-content-padding":"",class:"service-route-planner"},{default:n(()=>[r(u,{ref:"toolbar","is-expanded":e.isToolbarExpanded,"onUpdate:isExpanded":o[0]||(o[0]=a=>e.isToolbarExpanded=a),locations:s.locationsWithKioskHealth,"selected-location-ids":e.selectedLocations,class:j(["toolbar",[e.$vuetify.display.smAndDown?"mobile-toolbar":"desktop-toolbar"]]),onToggleSelectAll:o[1]||(o[1]=a=>s.isAllSelected=!s.isAllSelected),onToggleLocationSelect:o[2]||(o[2]=a=>s.toggleLocationSelected(a,!0,!1)),onShowLocation:s.panToMarker},null,8,["is-expanded","locations","selected-location-ids","class","onShowLocation"]),r(m,{ref:"map","api-key":s.mapOptions.apiKey,center:s.mapOptions.center,zoom:s.mapOptions.zoom,"map-id":s.mapOptions.mapId,"disable-default-ui":"","clickable-icons":!1,class:"google-map",onIdle:o[4]||(o[4]=a=>e.isMapReady=!0),onClick:s.closeInfoWindow},{default:n(()=>[e.userPositionMarker?(d(),h(p,{key:0,options:e.userPositionMarker},null,8,["options"])):g("",!0),r(k,{options:s.clusterOptions},{default:n(()=>[(d(!0),$(Z,null,F(s.locationMarkers,(a,P)=>(d(),h(S,{key:P,options:a,onClick:Y(L=>s.openInfoWindow(a.location),["stop"])},{default:n(()=>{var L,O;return[r(v,{"service-status-color":(L=a.location.worstServiceStatus)==null?void 0:L.color,"health-status-color":(O=a.location.worstHealthStatus)==null?void 0:O.color,"is-high-revenue":a.location.isHighRevenue,"is-selected":e.selectedLocations.includes(a.location.id)},null,8,["service-status-color","health-status-color","is-high-revenue","is-selected"])]}),_:2},1032,["options","onClick"]))),128))]),_:1},8,["options"]),r(C,{ref:"infoWindow",options:s.infoWindowOptions},{default:n(()=>[J("div",null,[e.activeLocation?(d(),h(w,{key:e.activeLocation.id,kiosks:e.activeLocation.kiosks,"is-included-in-route":e.selectedLocations.includes(e.activeLocation.id),onToggleSelection:o[3]||(o[3]=a=>s.toggleLocationSelected(e.activeLocation.id))},null,8,["kiosks","is-included-in-route"])):g("",!0)])]),_:1},8,["options"])]),_:1},8,["api-key","center","zoom","map-id","onClick"]),r(Q,{transition:"slide-y-transition"},{activator:n(({props:a})=>[r(q,U({class:"route-planner-legend",color:"info",icon:"$mapMarkerAlt"},a),null,16)]),default:n(()=>[r(f)]),_:1}),e.isMounted?(d(),h(X,{key:0,"model-value":s.isLoading||!e.userHasAssignedKiosks,disabled:"",persistent:"",attach:".service-route-planner","content-class":"h-100 w-100 d-flex justify-center align-center"},{default:n(()=>[e.userHasAssignedKiosks?s.isLoading?(d(),h(M,{key:1,theme:"light"},{default:n(()=>[r(R,{class:"justify-center"},{default:n(()=>[y(" Loading Kiosks ")]),_:1}),r(b,null,{default:n(()=>[r(ee)]),_:1})]),_:1})):g("",!0):(d(),h(M,{key:0,theme:"light"},{default:n(()=>[r(R,{class:"justify-center"},{default:n(()=>[y(" No Assigned Kiosks ")]),_:1}),r(b,{class:"text-center"},{default:n(()=>[y(" Your account has no assigned kiosks ")]),_:1})]),_:1}))]),_:1},8,["model-value"])):g("",!0)]),_:1})}const Oe=_(te,[["render",oe],["__scopeId","data-v-12e80f69"]]);export{Oe as default};
