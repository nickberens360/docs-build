var F=i=>{throw TypeError(i)};var M=(i,a,n)=>a.has(i)||F("Cannot "+n);var s=(i,a,n)=>(M(i,a,"read from private field"),n?n.call(i):a.get(i)),h=(i,a,n)=>a.has(i)?F("Cannot add the same private member more than once"):a instanceof WeakSet?a.add(i):a.set(i,n),r=(i,a,n,l)=>(M(i,a,"write to private field"),l?l.call(i,n):a.set(i,n),n),o=(i,a,n)=>(M(i,a,"access private method"),n);(function(){"use strict";var n,l,d,v,m,I,u,p,f,S,T,x,t,k,z,w,C,D,K,E,g,A;onmessage=async function({data:c}){var e;try{c.type==="initialize"?i(c.data):c.type==="user-interaction"?self.sessionTimeoutService.recordInteraction(c.data):c.type==="end-session"&&((e=self.sessionTimeoutService)==null||e.endSession(),self.close())}catch(y){console.error(y),self.postMessage({type:"error"})}};async function i(c){if(self.sessionTimeoutService)return self.sessionTimeoutService;const e=new a(c);self.sessionTimeoutService=e,self.sessionTimeoutService.startSession()}class a{constructor({type:e="timer",idleThresholdMinutes:y=14,expireAfterIdleMinutes:q=1,keepAliveIntervalMinutes:L=5}){h(this,t);h(this,n,["timer","idle-detection-api"]);h(this,l,"timer");h(this,d,"pending");h(this,v,14);h(this,m,1);h(this,I,5);h(this,u);h(this,p);h(this,f);h(this,S);h(this,T);h(this,x);r(this,I,Math.max(1,parseFloat(L)||0)),r(this,v,Math.max(1,parseFloat(y)||1)),r(this,m,Math.max(0,parseFloat(q)||0)),r(this,l,s(this,n).includes(e)?e:s(this,n)[0])}get timeToExpiration(){return s(this,T)}set timeToExpiration(e){r(this,T,e),e<=0&&(this.sessionStatus="expired"),o(this,t,A).call(this)}get sessionStatus(){return s(this,d)}set sessionStatus(e){e!==s(this,d)&&(s(this,d)==="idle"&&e==="active"?(o(this,t,g).call(this),o(this,t,E).call(this)):e==="idle"?o(this,t,K).call(this):e==="active"&&o(this,t,C).call(this),r(this,d,e),o(this,t,A).call(this))}get sessionState(){return{sessionStatus:this.sessionStatus,timeToExpiration:this.timeToExpiration}}async startSession(){if(s(this,l)!=="timer")try{await o(this,t,k).call(this)}catch{r(this,l,"timer"),this.startSession()}else o(this,t,z).call(this)}endSession(){o(this,t,D).call(this),o(this,t,w).call(this),o(this,t,E).call(this)}recordInteraction(e){r(this,x,e||Date.now()),this.sessionStatus="active"}postMessage(e,y={}){self.postMessage({type:e,data:y})}}n=new WeakMap,l=new WeakMap,d=new WeakMap,v=new WeakMap,m=new WeakMap,I=new WeakMap,u=new WeakMap,p=new WeakMap,f=new WeakMap,S=new WeakMap,T=new WeakMap,x=new WeakMap,t=new WeakSet,k=async function(){r(this,u,new self.IdleDetector),s(this,u).addEventListener("change",()=>{this.sessionStatus=s(this,u).userState}),await s(this,u).start({threshold:s(this,v)*6e4})},z=function(){this.recordInteraction(),o(this,t,w).call(this),r(this,p,setInterval(()=>{if(this.sessionStatus==="active"){const e=s(this,x)+s(this,v)*6e4;Date.now()>=e&&(this.sessionStatus="idle")}},250))},w=function(){s(this,p)&&(clearInterval(s(this,p)),r(this,p,void 0))},C=function(){o(this,t,D).call(this);const e=s(this,I)*6e4;r(this,f,setInterval(()=>{["active","idle"].includes(this.sessionStatus)&&o(this,t,g).call(this)},e))},D=function(){s(this,f)&&(clearInterval(s(this,f)),r(this,f,void 0))},K=function(){o(this,t,E).call(this);const e=Date.now()+s(this,m)*6e4;r(this,S,setInterval(()=>{this.sessionStatus==="idle"?this.timeToExpiration=e-Date.now():o(this,t,E).call(this)},250))},E=function(){s(this,S)&&(clearInterval(s(this,S)),r(this,S,void 0)),this.timeToExpiration=void 0},g=function(){this.postMessage("extend-session")},A=function(){this.postMessage("state-update",this.sessionState)}})();
