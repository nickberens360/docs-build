import m from"./MeruDataTable-jf3gvfqw.js";import N from"./TabbedContent-CP2vZ3mD.js";import{u as U}from"./tableQueryParams-BJUPd67r.js";import{ah as F}from"./vuetify-BgnNF2O3.js";import{C as f,i as s,r as v,_ as W,A as g,e as r,m as t,s as G,q as h,B as n,J as o}from"./@vue-DNrUJgob.js";import"./index-LK9MQE2L.js";import"./vuex-D3TwipD2.js";import"./date-fns-2ylUqVpG.js";import"./@babel-BTTPuEuv.js";import"./vue-component-docs-plugin-BnqcuvvC.js";import"./vue-router-BVOKdCCq.js";import"./axios-xsH4HHeE.js";import"./axios-cache-interceptor-DgAMPFM2.js";import"./cache-parser-DXYp_BCq.js";import"./fast-defer-9MI9za_P.js";import"./object-code-SBtdq8jY.js";import"./@fortawesome-BWcQmPY7.js";import"./@awesome.me-Btqfd-fw.js";const oe={__name:"TabbedContent",setup(L){function T(){return{tabs:[{title:"Tab 1",value:"tab1"},{title:"Tab 2",value:"tab2"},{title:"Tab 3",value:"tab3",icon:"$truck"}]}}function k(){const i=[{title:"Name",value:"name"},{title:"Species",value:"species"},{title:"Diet",value:"diet"},{title:"Habitat",value:"habitat"}],e=[{name:"African Elephant",species:"Loxodonta africana",diet:"Herbivore",habitat:"Savanna, Forests"},{name:"African Wild Dog",species:"Lycaon pictus",diet:"Carnivore",habitat:"Savanna, Grasslands"},{name:"African Penguin",species:"Spheniscus demersus",diet:"Carnivore",habitat:"Coastal"},{name:"African Lion",species:"Panthera leo",diet:"Carnivore",habitat:"Savanna, Grasslands"},{name:"African Buffalo",species:"Syncerus caffer",diet:"Herbivore",habitat:"Savanna, Grasslands"},{name:"African Leopard",species:"Panthera pardus",diet:"Carnivore",habitat:"Savanna, Forests"},{name:"African Civet",species:"Civettictis civetta",diet:"Omnivore",habitat:"Savanna, Forests"},{name:"American Bison",species:"Bison bison",diet:"Herbivore",habitat:"Grasslands"},{name:"American Black Bear",species:"Ursus americanus",diet:"Omnivore",habitat:"Forests"},{name:"American Alligator",species:"Alligator mississippiensis",diet:"Carnivore",habitat:"Freshwater, Swamps"},{name:"American Flamingo",species:"Phoenicopterus ruber",diet:"Omnivore",habitat:"Coastal, Wetlands"}],d=[{key:"name",order:"desc"}],{sortBy:a,pagination:c}=U({initialSortBy:d,initialPagination:{itemsPerPage:3,page:1}}),b=v(!1);function E(){b.value=!0,setTimeout(()=>{b.value=!1},1e3)}return{headers:i,items:e,sortBy:a,pagination:c,loading:b,fetchItems:E}}function C(){const i=v(!1);return{propHeaders:[{title:"Name",key:"name"},{title:"Type",key:"type"},{title:"Required",key:"required"},{title:"Default",key:"default"},{title:"Description",key:"description"},{title:"Actions",key:"actions"}],propItems:[{name:"tabs",type:"Array",required:"true",default:"undefined",description:"An array of tab objects"},{name:"useQueryParam",type:"Boolean",required:"false",default:"false",description:"Whether to use query params for the active tab"},{name:"itemTitle",type:"String",required:"false",default:"title",description:"The key to use for the tab title"},{name:"itemValue",type:"String",required:"false",default:"value",description:"The key to use for the tab value"},{name:"loading",type:"Boolean",required:"false",default:"false"},{name:"displayTabsOnly",type:"Boolean",required:"false",default:"false",description:"Whether to only display the tabs and not the mobile nav"},{name:"mobileBreakpoint",type:"String",required:"false",default:"smAndDown"}],displayTabsOnlyProp:i}}function P(){return{eventHeaders:[{title:"Event",key:"event"},{title:"Type",key:"type"},{title:"Description",key:"description"}],eventItems:[{event:"tab-change",type:"String",description:"Emits the active tab value"}]}}function S(){return{slotsHeaders:[{title:"Slot Name",key:"name"},{title:"Default Content",key:"defaultContent"},{title:"Description",key:"description"}],slotsItems:[{name:"[`tab-window-item.${string}`]",defaultContent:"",description:"Slot for custom rendering of the tab window item."}]}}const{propHeaders:A,propItems:B,displayTabsOnlyProp:l}=C(),{eventHeaders:w,eventItems:D}=P(),{slotsHeaders:q,slotsItems:H}=S(),{tabs:I}=T(),{headers:V,items:x,sortBy:u,pagination:p,loading:y,fetchItems:O}=k();return O(),(i,e)=>{const d=W("ExampleComponentUsage");return g(),f(d,{"expand-props-table":""},{default:s(()=>[r(N,{loading:t(y),tabs:t(I),"use-query-param":!0,"display-tabs-only":t(l)},{"content.tab1":s(()=>[r(m,{"sort-by":t(u),"onUpdate:sortBy":e[0]||(e[0]=a=>h(u)?u.value=a:null),"items-per-page":t(p).itemsPerPage,"onUpdate:itemsPerPage":e[1]||(e[1]=a=>t(p).itemsPerPage=a),page:t(p).page,"onUpdate:page":e[2]||(e[2]=a=>t(p).page=a),"item-value":"name","is-using-query-params":"",headers:t(V),items:t(x),loading:t(y)},null,8,["sort-by","items-per-page","page","headers","items","loading"])]),"content.tab2":s(()=>e[4]||(e[4]=[o(" Two ")])),"content.tab3":s(()=>e[5]||(e[5]=[o(" Three ")])),_:2},1032,["loading","tabs","display-tabs-only"])]),description:s(()=>e[6]||(e[6]=[n("p",{class:"mb-4"},[o(" Tab content can be added via dynamic slots "),n("code",null,"[`tab-window-item.${string}`]"),o(", or by modeling the "),n("code",null,"activeTab"),o(" prop to a "),n("code",null,"VTabsWindows"),o(" or "),n("code",null,"VWindow"),o(" component in the parent. ")],-1),n("p",{class:"mb-4"}," Example tab: ",-1),n("pre",{class:"pa-4",style:{"background-color":"black",color:"white"}},`[
  {
    title: 'Partially Received',
    value: 'partiallyReceived',
    icon: '$truck',
  },
]          `,-1)])),props:s(()=>[r(m,{headers:t(A),items:t(B)},{"item.actions":s(({item:a})=>[a.name==="displayTabsOnly"?(g(),f(F,{key:0,modelValue:t(l),"onUpdate:modelValue":e[3]||(e[3]=c=>h(l)?l.value=c:null),label:"Display Tabs Only","hide-details":""},null,8,["modelValue"])):G("",!0)]),_:2},1032,["headers","items"])]),events:s(()=>[r(m,{headers:t(w),items:t(D)},null,8,["headers","items"])]),slots:s(()=>[r(m,{headers:t(q),items:t(H)},null,8,["headers","items"])]),_:1})}}};export{oe as default};
